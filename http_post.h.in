#include "lwip/dns.h"

err_t httpc_post_file_dns(const char* server_name, u16_t port, const char* uri, const char* payload, const char* auth_token, const httpc_connection_t *settings,
                   altcp_recv_fn recv_fn, void* callback_arg, httpc_state_t **connection);

static err_t
httpc_post_init_connection(httpc_state_t **connection, const httpc_connection_t *settings, const char* server_name,
                      u16_t server_port, const char* uri, const char* payload, const char* auth_token, altcp_recv_fn recv_fn, void* callback_arg);

static err_t httpc_post_init_connection_common(httpc_state_t **connection, const httpc_connection_t *settings, const char* server_name,
                      u16_t server_port, const char* uri, const char* payload, const char* auth_token, altcp_recv_fn recv_fn, void* callback_arg, int use_host);


int httpc_post_create_request_string(const httpc_connection_t *settings, const char* server_name, int server_port, const char* uri,
                            const char* payload, const char* auth_token, int use_host, char *buffer, size_t buffer_size);
static err_t
httpc_get_internal_addr(httpc_state_t* req, const ip_addr_t *ipaddr);
static err_t
httpc_get_internal_dns(httpc_state_t* req, const char* server_name);
static err_t
httpc_free_state(httpc_state_t* req);


static err_t
httpc_tcp_recv(void *arg, struct altcp_pcb *pcb, struct pbuf *p, err_t r);
static void
httpc_tcp_err(void *arg, err_t err);
static err_t
httpc_tcp_poll(void *arg, struct altcp_pcb *pcb);
static err_t
httpc_tcp_sent(void *arg, struct altcp_pcb *pcb, u16_t len);

static void
httpc_dns_found(const char* hostname, const ip_addr_t *ipaddr, void *arg);

static err_t
httpc_get_internal_addr(httpc_state_t* req, const ip_addr_t *ipaddr);

static err_t
http_parse_response_status(struct pbuf *p, u16_t *http_version, u16_t *http_status, u16_t *http_status_str_offset);

static err_t
httpc_close(httpc_state_t* req, httpc_result_t result, u32_t server_response, err_t err);

static err_t
http_wait_headers(struct pbuf *p, u32_t *content_length, u16_t *total_header_len);

static err_t
httpc_free_state(httpc_state_t* req);

static err_t
httpc_tcp_connected(void *arg, struct altcp_pcb *pcb, err_t err);

//static err_t dns_gethostbyname(const char *hostname, ip_addr_t *addr, dns_found_callback found, void *callback_arg);
